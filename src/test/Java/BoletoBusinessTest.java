import com.vandersoncamp.bankslip.business.BoletoBusiness;import com.vandersoncamp.bankslip.model.Boleto;import com.vandersoncamp.bankslip.model.Status;import org.junit.jupiter.api.DisplayName;import org.junit.jupiter.api.Test;import org.mockito.Mockito;import java.math.BigDecimal;import java.time.LocalDate;import java.util.ArrayList;import java.util.List;import static org.junit.jupiter.api.Assertions.assertNotNull;import static org.mockito.ArgumentMatchers.any;import static org.mockito.Mockito.when;public class BoletoBusinessTest {    private static final String HASH_ID = "ef4b73d8-a983-4941-9748-1c25de65b0ac";    private Boleto getBoleto() {        Boleto boleto = new Boleto();        boleto.setDue_date(LocalDate.now());        boleto.setTotal_in_cents(BigDecimal.TEN);        boleto.setStatus(Status.PENDING);        boleto.setCustomer("Boleto Test");        return boleto;    }    private BoletoBusiness boletoBusinessMock() {        BoletoBusiness mock = Mockito.mock(BoletoBusiness.class);        when(mock.create(any())).thenReturn(new Boleto());        when(mock.find(HASH_ID)).thenReturn(new Boleto());        when(mock.findAll(any(), any(), any())).thenReturn(new ArrayList<>());        when(mock.update(any(), any())).thenReturn(new Boleto());        return mock;    }    @Test    @DisplayName("Test 01")    public void Test02() {        Boleto boleto = boletoBusinessMock().create(getBoleto());        assertNotNull(boleto);    }    @Test    @DisplayName("Test 02")    public void Test03() {        Boleto boleto = boletoBusinessMock().find(HASH_ID);        assertNotNull(boleto);    }    @Test    @DisplayName("Test 03")    public void Test04() {        List<Boleto> boletos = boletoBusinessMock().findAll("", "", "");        assertNotNull(boletos);    }    @Test    @DisplayName("Test 04")    public void Test05() {        Boleto boleto = boletoBusinessMock().update(HASH_ID, getBoleto());        assertNotNull(boleto);    }}